<?php

namespace Movibe\BackendBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ImageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ImageRepository extends EntityRepository
{
    public function countImages()
    {
        return $this->createQueryBuilder('a')->select('COUNT(a)')->getQuery()->getSingleScalarResult();
    }

    public function promotionPersonne($id)
    {
        $image = $this->createQueryBuilder('i')->join('i.personnes', 'p')->where('p.id = :id','i.promotion = TRUE')->setParameter('id',$id)->getQuery();
        return $image->getResult();
        /*
        return $this->getEntityManager()->createQuery(
            'SELECT i
            FROM MovibeBackendBundle:Image i
            JOIN MovibeBackendBundle:Personne p
            WITH i.personnes = p
            WHERE p = :id
            AND i.promotion = TRUE')
            ->setParameter('id',$id)
            ->getResult();*/
    }

    public function promotionFilm($id)
    {
        $image = $this->createQueryBuilder('i')->join('i.film', 'f')->where('f.id = :id','i.promotion = TRUE')->setParameter('id',$id)->getQuery();
        return $image->getResult();
    }

    public function autrePersonne($id)
    {
        $images = $this->createQueryBuilder('i')->join('i.personnes', 'p')->where('p.id = :id','i.promotion = FALSE','i.film IS NULL')->setParameter('id',$id)->getQuery();
        return $images->getResult();

    }

    public function newsImage($type, $id)
    {
        switch ($type)
        {
            case 'film':
                return $this->createQueryBuilder('i')->where('i.film = :id ')->setParameter('id',$id);
                break;
            case 'personne':
                return $this->createQueryBuilder('i')->join('i.personnes', 'p')->where('p.id = :id ')->setParameter('id',$id);
                break;
        }

    }
}
